#include pps/library.tc
#include SamplePrograms/lrblib.tc
#include SamplePrograms/double.tc

// cmbyn.tc - lrb - 5/31/18

bar char x(0) [return ceqn(x,"call ",4)]

// prints "call me by your name" and lib version, then "call.." twice more
// in all caps, and lower case. Prints the length of the string (20). Calls 
// bar() and prints returned value (1, i.e. true). Queries "Type a character:".
// Tests the reply is 'c', prints comment if not. Computes a file name, reads
// that file, and processes it using double. Result is list of unique words,
// sometimes twice with digit 1 after the second.
// Standard Lib fcns used: printf, strlen, index, readfile, pl, pft, ceqn
// lrblib.tc fcns used: toupper
// double.tc fcns used: double
// cmbyn.tc fcns used: bar
// This appears to be a test program for several fcns, mainly double.
// I am using it to test library loading using #include.  (tag, 10/26/2018)

main [
 char cmbyn(100),t(5000),file(100)
 int k,p
 strcpy cmbyn,"Call.Me.By.Your.Name"
 strcpy file, "SamplePrograms/"
 printf "%c%s%c",10,cmbyn,10
 toupper cmbyn
 lrblibver
 printf "%c%c%s",10,10,cmbyn
 tolower cmbyn
 printf "%c%s%c",10,cmbyn,10
 printf("%clength is %d",10,k=strlen(cmbyn))
 printf("%cmatched is true (1) false (0) %d",10,bar(cmbyn))
 printf "%c%cType a character: ",10,10
 if 'c'==MC 2 printf "%c",10
 else printf "%cYour character wasn't a 'c'",10)
 while (p=index(cmbyn,k," ",1)) cmbyn(p-1)='.'
 strcat file,cmbyn
 strcat file,".txt"
 if ((k=readfile(file,t,5000-1))<=0) [ 
 	pl "error reading file: "
 	pl cmbyn
 ]
 else [pft t,t+k;double cmbyn,1]
 ]

